ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 2


  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  37              		.loc 1 55 0
  38 0004 0D4B     		ldr	r3, .L3
  39 0006 0122     		movs	r2, #1
  40 0008 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  41              		.loc 1 66 0
  42 000a 0D4B     		ldr	r3, .L3+4
  43 000c 9B7C     		ldrb	r3, [r3, #18]
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  44              		.loc 1 69 0
  45 000e 0D4B     		ldr	r3, .L3+8
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 3


  46 0010 1B7B     		ldrb	r3, [r3, #12]
  47 0012 DBB2     		uxtb	r3, r3
  48 0014 03F00303 		and	r3, r3, #3
  49 0018 012B     		cmp	r3, #1
  50 001a 08D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  51              		.loc 1 71 0
  52 001c 094B     		ldr	r3, .L3+8
  53 001e DB7B     		ldrb	r3, [r3, #15]
  54 0020 DBB2     		uxtb	r3, r3
  55 0022 83F07F03 		eor	r3, r3, #127
  56 0026 DB43     		mvns	r3, r3
  57 0028 DAB2     		uxtb	r2, r3
  58 002a 064B     		ldr	r3, .L3+8
  59 002c DA73     		strb	r2, [r3, #15]
  60              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  61              		.loc 1 80 0
  62 002e 054B     		ldr	r3, .L3+8
  63 0030 0122     		movs	r2, #1
  64 0032 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 4


  65              		.loc 1 107 0
  66 0034 BD46     		mov	sp, r7
  67              		.cfi_def_cfa_register 13
  68              		@ sp needed
  69 0036 5DF8047B 		ldr	r7, [sp], #4
  70              		.cfi_restore 7
  71              		.cfi_def_cfa_offset 0
  72 003a 7047     		bx	lr
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 003c 0B600040 		.word	1073766411
  77 0040 FC5F0040 		.word	1073766396
  78 0044 00000000 		.word	USBFS_EP
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  82              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
  83              		.align	2
  84              		.global	USBFS_SOF_ISR
  85              		.thumb
  86              		.thumb_func
  87              		.type	USBFS_SOF_ISR, %function
  88              	USBFS_SOF_ISR:
  89              	.LFB1:
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 5


 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 6


 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 7


 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 8


 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 9


 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 10


 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 11


 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 12


 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 13


 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 14


 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
  90              		.loc 1 694 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 15


 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 100              		.loc 1 708 0
 101 0004 BD46     		mov	sp, r7
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 0006 5DF8047B 		ldr	r7, [sp], #4
 105              		.cfi_restore 7
 106              		.cfi_def_cfa_offset 0
 107 000a 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE1:
 110              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 111              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 112              		.align	2
 113              		.global	USBFS_BUS_RESET_ISR
 114              		.thumb
 115              		.thumb_func
 116              		.type	USBFS_BUS_RESET_ISR, %function
 117              	USBFS_BUS_RESET_ISR:
 118              	.LFB2:
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
 119              		.loc 1 723 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0000 80B5     		push	{r7, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 16


 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 129              		.loc 1 734 0
 130 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 735:Generated_Source\PSoC5/USBFS_episr.c **** 
 736:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBFS_episr.c **** }
 131              		.loc 1 739 0
 132 0008 80BD     		pop	{r7, pc}
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 136 000a 00BF     		.text
 137              	.Letext0:
 138              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 139              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 140              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 141              		.section	.debug_info,"",%progbits
 142              	.Ldebug_info0:
 143 0000 09020000 		.4byte	0x209
 144 0004 0400     		.2byte	0x4
 145 0006 00000000 		.4byte	.Ldebug_abbrev0
 146 000a 04       		.byte	0x4
 147 000b 01       		.uleb128 0x1
 148 000c 2A010000 		.4byte	.LASF35
 149 0010 01       		.byte	0x1
 150 0011 1F000000 		.4byte	.LASF36
 151 0015 6D000000 		.4byte	.LASF37
 152 0019 00000000 		.4byte	.Ldebug_ranges0+0
 153 001d 00000000 		.4byte	0
 154 0021 00000000 		.4byte	.Ldebug_line0
 155 0025 02       		.uleb128 0x2
 156 0026 01       		.byte	0x1
 157 0027 06       		.byte	0x6
 158 0028 8F020000 		.4byte	.LASF0
 159 002c 02       		.uleb128 0x2
 160 002d 01       		.byte	0x1
 161 002e 08       		.byte	0x8
 162 002f D8000000 		.4byte	.LASF1
 163 0033 02       		.uleb128 0x2
 164 0034 02       		.byte	0x2
 165 0035 05       		.byte	0x5
 166 0036 6C020000 		.4byte	.LASF2
 167 003a 02       		.uleb128 0x2
 168 003b 02       		.byte	0x2
 169 003c 07       		.byte	0x7
 170 003d 0C000000 		.4byte	.LASF3
 171 0041 02       		.uleb128 0x2
 172 0042 04       		.byte	0x4
 173 0043 05       		.byte	0x5
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 17


 174 0044 86020000 		.4byte	.LASF4
 175 0048 02       		.uleb128 0x2
 176 0049 04       		.byte	0x4
 177 004a 07       		.byte	0x7
 178 004b F6000000 		.4byte	.LASF5
 179 004f 02       		.uleb128 0x2
 180 0050 08       		.byte	0x8
 181 0051 05       		.byte	0x5
 182 0052 4E020000 		.4byte	.LASF6
 183 0056 02       		.uleb128 0x2
 184 0057 08       		.byte	0x8
 185 0058 07       		.byte	0x7
 186 0059 07020000 		.4byte	.LASF7
 187 005d 03       		.uleb128 0x3
 188 005e 04       		.byte	0x4
 189 005f 05       		.byte	0x5
 190 0060 696E7400 		.ascii	"int\000"
 191 0064 02       		.uleb128 0x2
 192 0065 04       		.byte	0x4
 193 0066 07       		.byte	0x7
 194 0067 FA010000 		.4byte	.LASF8
 195 006b 04       		.uleb128 0x4
 196 006c 76020000 		.4byte	.LASF9
 197 0070 02       		.byte	0x2
 198 0071 9201     		.2byte	0x192
 199 0073 2C000000 		.4byte	0x2c
 200 0077 04       		.uleb128 0x4
 201 0078 DE010000 		.4byte	.LASF10
 202 007c 02       		.byte	0x2
 203 007d 9301     		.2byte	0x193
 204 007f 3A000000 		.4byte	0x3a
 205 0083 02       		.uleb128 0x2
 206 0084 04       		.byte	0x4
 207 0085 04       		.byte	0x4
 208 0086 06000000 		.4byte	.LASF11
 209 008a 02       		.uleb128 0x2
 210 008b 08       		.byte	0x8
 211 008c 04       		.byte	0x4
 212 008d B8010000 		.4byte	.LASF12
 213 0091 02       		.uleb128 0x2
 214 0092 01       		.byte	0x1
 215 0093 08       		.byte	0x8
 216 0094 5C020000 		.4byte	.LASF13
 217 0098 04       		.uleb128 0x4
 218 0099 E6000000 		.4byte	.LASF14
 219 009d 02       		.byte	0x2
 220 009e 3C02     		.2byte	0x23c
 221 00a0 A4000000 		.4byte	0xa4
 222 00a4 05       		.uleb128 0x5
 223 00a5 6B000000 		.4byte	0x6b
 224 00a9 02       		.uleb128 0x2
 225 00aa 04       		.byte	0x4
 226 00ab 07       		.byte	0x7
 227 00ac 37020000 		.4byte	.LASF15
 228 00b0 06       		.uleb128 0x6
 229 00b1 0C       		.byte	0xc
 230 00b2 03       		.byte	0x3
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 18


 231 00b3 93       		.byte	0x93
 232 00b4 25010000 		.4byte	0x125
 233 00b8 07       		.uleb128 0x7
 234 00b9 40020000 		.4byte	.LASF16
 235 00bd 03       		.byte	0x3
 236 00be 95       		.byte	0x95
 237 00bf 6B000000 		.4byte	0x6b
 238 00c3 00       		.byte	0
 239 00c4 07       		.uleb128 0x7
 240 00c5 EB000000 		.4byte	.LASF17
 241 00c9 03       		.byte	0x3
 242 00ca 96       		.byte	0x96
 243 00cb 6B000000 		.4byte	0x6b
 244 00cf 01       		.byte	0x1
 245 00d0 07       		.uleb128 0x7
 246 00d1 1E020000 		.4byte	.LASF18
 247 00d5 03       		.byte	0x3
 248 00d6 97       		.byte	0x97
 249 00d7 6B000000 		.4byte	0x6b
 250 00db 02       		.byte	0x2
 251 00dc 07       		.uleb128 0x7
 252 00dd CF000000 		.4byte	.LASF19
 253 00e1 03       		.byte	0x3
 254 00e2 98       		.byte	0x98
 255 00e3 6B000000 		.4byte	0x6b
 256 00e7 03       		.byte	0x3
 257 00e8 07       		.uleb128 0x7
 258 00e9 08010000 		.4byte	.LASF20
 259 00ed 03       		.byte	0x3
 260 00ee 99       		.byte	0x99
 261 00ef 6B000000 		.4byte	0x6b
 262 00f3 04       		.byte	0x4
 263 00f4 07       		.uleb128 0x7
 264 00f5 47020000 		.4byte	.LASF21
 265 00f9 03       		.byte	0x3
 266 00fa 9A       		.byte	0x9a
 267 00fb 6B000000 		.4byte	0x6b
 268 00ff 05       		.byte	0x5
 269 0100 07       		.uleb128 0x7
 270 0101 D3010000 		.4byte	.LASF22
 271 0105 03       		.byte	0x3
 272 0106 9B       		.byte	0x9b
 273 0107 77000000 		.4byte	0x77
 274 010b 06       		.byte	0x6
 275 010c 07       		.uleb128 0x7
 276 010d 61020000 		.4byte	.LASF23
 277 0111 03       		.byte	0x3
 278 0112 9C       		.byte	0x9c
 279 0113 77000000 		.4byte	0x77
 280 0117 08       		.byte	0x8
 281 0118 07       		.uleb128 0x7
 282 0119 7C020000 		.4byte	.LASF24
 283 011d 03       		.byte	0x3
 284 011e 9D       		.byte	0x9d
 285 011f 6B000000 		.4byte	0x6b
 286 0123 0A       		.byte	0xa
 287 0124 00       		.byte	0
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 19


 288 0125 08       		.uleb128 0x8
 289 0126 44000000 		.4byte	.LASF25
 290 012a 03       		.byte	0x3
 291 012b 9E       		.byte	0x9e
 292 012c B0000000 		.4byte	0xb0
 293 0130 06       		.uleb128 0x6
 294 0131 10       		.byte	0x10
 295 0132 03       		.byte	0x3
 296 0133 DA       		.byte	0xda
 297 0134 69010000 		.4byte	0x169
 298 0138 07       		.uleb128 0x7
 299 0139 C1000000 		.4byte	.LASF26
 300 013d 03       		.byte	0x3
 301 013e DC       		.byte	0xdc
 302 013f 6B000000 		.4byte	0x6b
 303 0143 00       		.byte	0
 304 0144 07       		.uleb128 0x7
 305 0145 C8000000 		.4byte	.LASF27
 306 0149 03       		.byte	0x3
 307 014a DD       		.byte	0xdd
 308 014b 6B000000 		.4byte	0x6b
 309 014f 01       		.byte	0x1
 310 0150 07       		.uleb128 0x7
 311 0151 00000000 		.4byte	.LASF28
 312 0155 03       		.byte	0x3
 313 0156 DE       		.byte	0xde
 314 0157 6B000000 		.4byte	0x6b
 315 015b 02       		.byte	0x2
 316 015c 09       		.uleb128 0x9
 317 015d 67617000 		.ascii	"gap\000"
 318 0161 03       		.byte	0x3
 319 0162 DF       		.byte	0xdf
 320 0163 69010000 		.4byte	0x169
 321 0167 03       		.byte	0x3
 322 0168 00       		.byte	0
 323 0169 0A       		.uleb128 0xa
 324 016a 6B000000 		.4byte	0x6b
 325 016e 79010000 		.4byte	0x179
 326 0172 0B       		.uleb128 0xb
 327 0173 A9000000 		.4byte	0xa9
 328 0177 0C       		.byte	0xc
 329 0178 00       		.byte	0
 330 0179 08       		.uleb128 0x8
 331 017a BF010000 		.4byte	.LASF29
 332 017e 03       		.byte	0x3
 333 017f E0       		.byte	0xe0
 334 0180 30010000 		.4byte	0x130
 335 0184 0C       		.uleb128 0xc
 336 0185 90       		.byte	0x90
 337 0186 03       		.byte	0x3
 338 0187 1401     		.2byte	0x114
 339 0189 9B010000 		.4byte	0x19b
 340 018d 0D       		.uleb128 0xd
 341 018e 1B010000 		.4byte	.LASF30
 342 0192 03       		.byte	0x3
 343 0193 1601     		.2byte	0x116
 344 0195 9B010000 		.4byte	0x19b
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 20


 345 0199 00       		.byte	0
 346 019a 00       		.byte	0
 347 019b 0A       		.uleb128 0xa
 348 019c 79010000 		.4byte	0x179
 349 01a0 AB010000 		.4byte	0x1ab
 350 01a4 0B       		.uleb128 0xb
 351 01a5 A9000000 		.4byte	0xa9
 352 01a9 08       		.byte	0x8
 353 01aa 00       		.byte	0
 354 01ab 04       		.uleb128 0x4
 355 01ac E5010000 		.4byte	.LASF31
 356 01b0 03       		.byte	0x3
 357 01b1 1701     		.2byte	0x117
 358 01b3 84010000 		.4byte	0x184
 359 01b7 0E       		.uleb128 0xe
 360 01b8 28020000 		.4byte	.LASF32
 361 01bc 01       		.byte	0x1
 362 01bd 25       		.byte	0x25
 363 01be 00000000 		.4byte	.LFB0
 364 01c2 48000000 		.4byte	.LFE0-.LFB0
 365 01c6 01       		.uleb128 0x1
 366 01c7 9C       		.byte	0x9c
 367 01c8 0F       		.uleb128 0xf
 368 01c9 0D010000 		.4byte	.LASF33
 369 01cd 01       		.byte	0x1
 370 01ce B502     		.2byte	0x2b5
 371 01d0 00000000 		.4byte	.LFB1
 372 01d4 0C000000 		.4byte	.LFE1-.LFB1
 373 01d8 01       		.uleb128 0x1
 374 01d9 9C       		.byte	0x9c
 375 01da 10       		.uleb128 0x10
 376 01db 59000000 		.4byte	.LASF34
 377 01df 01       		.byte	0x1
 378 01e0 D202     		.2byte	0x2d2
 379 01e2 00000000 		.4byte	.LFB2
 380 01e6 0A000000 		.4byte	.LFE2-.LFB2
 381 01ea 01       		.uleb128 0x1
 382 01eb 9C       		.byte	0x9c
 383 01ec 0A       		.uleb128 0xa
 384 01ed 25010000 		.4byte	0x125
 385 01f1 FC010000 		.4byte	0x1fc
 386 01f5 0B       		.uleb128 0xb
 387 01f6 A9000000 		.4byte	0xa9
 388 01fa 08       		.byte	0x8
 389 01fb 00       		.byte	0
 390 01fc 11       		.uleb128 0x11
 391 01fd 21010000 		.4byte	.LASF38
 392 0201 04       		.byte	0x4
 393 0202 80       		.byte	0x80
 394 0203 07020000 		.4byte	0x207
 395 0207 05       		.uleb128 0x5
 396 0208 EC010000 		.4byte	0x1ec
 397 020c 00       		.byte	0
 398              		.section	.debug_abbrev,"",%progbits
 399              	.Ldebug_abbrev0:
 400 0000 01       		.uleb128 0x1
 401 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 21


 402 0002 01       		.byte	0x1
 403 0003 25       		.uleb128 0x25
 404 0004 0E       		.uleb128 0xe
 405 0005 13       		.uleb128 0x13
 406 0006 0B       		.uleb128 0xb
 407 0007 03       		.uleb128 0x3
 408 0008 0E       		.uleb128 0xe
 409 0009 1B       		.uleb128 0x1b
 410 000a 0E       		.uleb128 0xe
 411 000b 55       		.uleb128 0x55
 412 000c 17       		.uleb128 0x17
 413 000d 11       		.uleb128 0x11
 414 000e 01       		.uleb128 0x1
 415 000f 10       		.uleb128 0x10
 416 0010 17       		.uleb128 0x17
 417 0011 00       		.byte	0
 418 0012 00       		.byte	0
 419 0013 02       		.uleb128 0x2
 420 0014 24       		.uleb128 0x24
 421 0015 00       		.byte	0
 422 0016 0B       		.uleb128 0xb
 423 0017 0B       		.uleb128 0xb
 424 0018 3E       		.uleb128 0x3e
 425 0019 0B       		.uleb128 0xb
 426 001a 03       		.uleb128 0x3
 427 001b 0E       		.uleb128 0xe
 428 001c 00       		.byte	0
 429 001d 00       		.byte	0
 430 001e 03       		.uleb128 0x3
 431 001f 24       		.uleb128 0x24
 432 0020 00       		.byte	0
 433 0021 0B       		.uleb128 0xb
 434 0022 0B       		.uleb128 0xb
 435 0023 3E       		.uleb128 0x3e
 436 0024 0B       		.uleb128 0xb
 437 0025 03       		.uleb128 0x3
 438 0026 08       		.uleb128 0x8
 439 0027 00       		.byte	0
 440 0028 00       		.byte	0
 441 0029 04       		.uleb128 0x4
 442 002a 16       		.uleb128 0x16
 443 002b 00       		.byte	0
 444 002c 03       		.uleb128 0x3
 445 002d 0E       		.uleb128 0xe
 446 002e 3A       		.uleb128 0x3a
 447 002f 0B       		.uleb128 0xb
 448 0030 3B       		.uleb128 0x3b
 449 0031 05       		.uleb128 0x5
 450 0032 49       		.uleb128 0x49
 451 0033 13       		.uleb128 0x13
 452 0034 00       		.byte	0
 453 0035 00       		.byte	0
 454 0036 05       		.uleb128 0x5
 455 0037 35       		.uleb128 0x35
 456 0038 00       		.byte	0
 457 0039 49       		.uleb128 0x49
 458 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 22


 459 003b 00       		.byte	0
 460 003c 00       		.byte	0
 461 003d 06       		.uleb128 0x6
 462 003e 13       		.uleb128 0x13
 463 003f 01       		.byte	0x1
 464 0040 0B       		.uleb128 0xb
 465 0041 0B       		.uleb128 0xb
 466 0042 3A       		.uleb128 0x3a
 467 0043 0B       		.uleb128 0xb
 468 0044 3B       		.uleb128 0x3b
 469 0045 0B       		.uleb128 0xb
 470 0046 01       		.uleb128 0x1
 471 0047 13       		.uleb128 0x13
 472 0048 00       		.byte	0
 473 0049 00       		.byte	0
 474 004a 07       		.uleb128 0x7
 475 004b 0D       		.uleb128 0xd
 476 004c 00       		.byte	0
 477 004d 03       		.uleb128 0x3
 478 004e 0E       		.uleb128 0xe
 479 004f 3A       		.uleb128 0x3a
 480 0050 0B       		.uleb128 0xb
 481 0051 3B       		.uleb128 0x3b
 482 0052 0B       		.uleb128 0xb
 483 0053 49       		.uleb128 0x49
 484 0054 13       		.uleb128 0x13
 485 0055 38       		.uleb128 0x38
 486 0056 0B       		.uleb128 0xb
 487 0057 00       		.byte	0
 488 0058 00       		.byte	0
 489 0059 08       		.uleb128 0x8
 490 005a 16       		.uleb128 0x16
 491 005b 00       		.byte	0
 492 005c 03       		.uleb128 0x3
 493 005d 0E       		.uleb128 0xe
 494 005e 3A       		.uleb128 0x3a
 495 005f 0B       		.uleb128 0xb
 496 0060 3B       		.uleb128 0x3b
 497 0061 0B       		.uleb128 0xb
 498 0062 49       		.uleb128 0x49
 499 0063 13       		.uleb128 0x13
 500 0064 00       		.byte	0
 501 0065 00       		.byte	0
 502 0066 09       		.uleb128 0x9
 503 0067 0D       		.uleb128 0xd
 504 0068 00       		.byte	0
 505 0069 03       		.uleb128 0x3
 506 006a 08       		.uleb128 0x8
 507 006b 3A       		.uleb128 0x3a
 508 006c 0B       		.uleb128 0xb
 509 006d 3B       		.uleb128 0x3b
 510 006e 0B       		.uleb128 0xb
 511 006f 49       		.uleb128 0x49
 512 0070 13       		.uleb128 0x13
 513 0071 38       		.uleb128 0x38
 514 0072 0B       		.uleb128 0xb
 515 0073 00       		.byte	0
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 23


 516 0074 00       		.byte	0
 517 0075 0A       		.uleb128 0xa
 518 0076 01       		.uleb128 0x1
 519 0077 01       		.byte	0x1
 520 0078 49       		.uleb128 0x49
 521 0079 13       		.uleb128 0x13
 522 007a 01       		.uleb128 0x1
 523 007b 13       		.uleb128 0x13
 524 007c 00       		.byte	0
 525 007d 00       		.byte	0
 526 007e 0B       		.uleb128 0xb
 527 007f 21       		.uleb128 0x21
 528 0080 00       		.byte	0
 529 0081 49       		.uleb128 0x49
 530 0082 13       		.uleb128 0x13
 531 0083 2F       		.uleb128 0x2f
 532 0084 0B       		.uleb128 0xb
 533 0085 00       		.byte	0
 534 0086 00       		.byte	0
 535 0087 0C       		.uleb128 0xc
 536 0088 13       		.uleb128 0x13
 537 0089 01       		.byte	0x1
 538 008a 0B       		.uleb128 0xb
 539 008b 0B       		.uleb128 0xb
 540 008c 3A       		.uleb128 0x3a
 541 008d 0B       		.uleb128 0xb
 542 008e 3B       		.uleb128 0x3b
 543 008f 05       		.uleb128 0x5
 544 0090 01       		.uleb128 0x1
 545 0091 13       		.uleb128 0x13
 546 0092 00       		.byte	0
 547 0093 00       		.byte	0
 548 0094 0D       		.uleb128 0xd
 549 0095 0D       		.uleb128 0xd
 550 0096 00       		.byte	0
 551 0097 03       		.uleb128 0x3
 552 0098 0E       		.uleb128 0xe
 553 0099 3A       		.uleb128 0x3a
 554 009a 0B       		.uleb128 0xb
 555 009b 3B       		.uleb128 0x3b
 556 009c 05       		.uleb128 0x5
 557 009d 49       		.uleb128 0x49
 558 009e 13       		.uleb128 0x13
 559 009f 38       		.uleb128 0x38
 560 00a0 0B       		.uleb128 0xb
 561 00a1 00       		.byte	0
 562 00a2 00       		.byte	0
 563 00a3 0E       		.uleb128 0xe
 564 00a4 2E       		.uleb128 0x2e
 565 00a5 00       		.byte	0
 566 00a6 3F       		.uleb128 0x3f
 567 00a7 19       		.uleb128 0x19
 568 00a8 03       		.uleb128 0x3
 569 00a9 0E       		.uleb128 0xe
 570 00aa 3A       		.uleb128 0x3a
 571 00ab 0B       		.uleb128 0xb
 572 00ac 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 24


 573 00ad 0B       		.uleb128 0xb
 574 00ae 27       		.uleb128 0x27
 575 00af 19       		.uleb128 0x19
 576 00b0 11       		.uleb128 0x11
 577 00b1 01       		.uleb128 0x1
 578 00b2 12       		.uleb128 0x12
 579 00b3 06       		.uleb128 0x6
 580 00b4 40       		.uleb128 0x40
 581 00b5 18       		.uleb128 0x18
 582 00b6 9742     		.uleb128 0x2117
 583 00b8 19       		.uleb128 0x19
 584 00b9 00       		.byte	0
 585 00ba 00       		.byte	0
 586 00bb 0F       		.uleb128 0xf
 587 00bc 2E       		.uleb128 0x2e
 588 00bd 00       		.byte	0
 589 00be 3F       		.uleb128 0x3f
 590 00bf 19       		.uleb128 0x19
 591 00c0 03       		.uleb128 0x3
 592 00c1 0E       		.uleb128 0xe
 593 00c2 3A       		.uleb128 0x3a
 594 00c3 0B       		.uleb128 0xb
 595 00c4 3B       		.uleb128 0x3b
 596 00c5 05       		.uleb128 0x5
 597 00c6 27       		.uleb128 0x27
 598 00c7 19       		.uleb128 0x19
 599 00c8 11       		.uleb128 0x11
 600 00c9 01       		.uleb128 0x1
 601 00ca 12       		.uleb128 0x12
 602 00cb 06       		.uleb128 0x6
 603 00cc 40       		.uleb128 0x40
 604 00cd 18       		.uleb128 0x18
 605 00ce 9742     		.uleb128 0x2117
 606 00d0 19       		.uleb128 0x19
 607 00d1 00       		.byte	0
 608 00d2 00       		.byte	0
 609 00d3 10       		.uleb128 0x10
 610 00d4 2E       		.uleb128 0x2e
 611 00d5 00       		.byte	0
 612 00d6 3F       		.uleb128 0x3f
 613 00d7 19       		.uleb128 0x19
 614 00d8 03       		.uleb128 0x3
 615 00d9 0E       		.uleb128 0xe
 616 00da 3A       		.uleb128 0x3a
 617 00db 0B       		.uleb128 0xb
 618 00dc 3B       		.uleb128 0x3b
 619 00dd 05       		.uleb128 0x5
 620 00de 27       		.uleb128 0x27
 621 00df 19       		.uleb128 0x19
 622 00e0 11       		.uleb128 0x11
 623 00e1 01       		.uleb128 0x1
 624 00e2 12       		.uleb128 0x12
 625 00e3 06       		.uleb128 0x6
 626 00e4 40       		.uleb128 0x40
 627 00e5 18       		.uleb128 0x18
 628 00e6 9642     		.uleb128 0x2116
 629 00e8 19       		.uleb128 0x19
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 25


 630 00e9 00       		.byte	0
 631 00ea 00       		.byte	0
 632 00eb 11       		.uleb128 0x11
 633 00ec 34       		.uleb128 0x34
 634 00ed 00       		.byte	0
 635 00ee 03       		.uleb128 0x3
 636 00ef 0E       		.uleb128 0xe
 637 00f0 3A       		.uleb128 0x3a
 638 00f1 0B       		.uleb128 0xb
 639 00f2 3B       		.uleb128 0x3b
 640 00f3 0B       		.uleb128 0xb
 641 00f4 49       		.uleb128 0x49
 642 00f5 13       		.uleb128 0x13
 643 00f6 3F       		.uleb128 0x3f
 644 00f7 19       		.uleb128 0x19
 645 00f8 3C       		.uleb128 0x3c
 646 00f9 19       		.uleb128 0x19
 647 00fa 00       		.byte	0
 648 00fb 00       		.byte	0
 649 00fc 00       		.byte	0
 650              		.section	.debug_aranges,"",%progbits
 651 0000 2C000000 		.4byte	0x2c
 652 0004 0200     		.2byte	0x2
 653 0006 00000000 		.4byte	.Ldebug_info0
 654 000a 04       		.byte	0x4
 655 000b 00       		.byte	0
 656 000c 0000     		.2byte	0
 657 000e 0000     		.2byte	0
 658 0010 00000000 		.4byte	.LFB0
 659 0014 48000000 		.4byte	.LFE0-.LFB0
 660 0018 00000000 		.4byte	.LFB1
 661 001c 0C000000 		.4byte	.LFE1-.LFB1
 662 0020 00000000 		.4byte	.LFB2
 663 0024 0A000000 		.4byte	.LFE2-.LFB2
 664 0028 00000000 		.4byte	0
 665 002c 00000000 		.4byte	0
 666              		.section	.debug_ranges,"",%progbits
 667              	.Ldebug_ranges0:
 668 0000 00000000 		.4byte	.LFB0
 669 0004 48000000 		.4byte	.LFE0
 670 0008 00000000 		.4byte	.LFB1
 671 000c 0C000000 		.4byte	.LFE1
 672 0010 00000000 		.4byte	.LFB2
 673 0014 0A000000 		.4byte	.LFE2
 674 0018 00000000 		.4byte	0
 675 001c 00000000 		.4byte	0
 676              		.section	.debug_line,"",%progbits
 677              	.Ldebug_line0:
 678 0000 AC000000 		.section	.debug_str,"MS",%progbits,1
 678      02006200 
 678      00000201 
 678      FB0E0D00 
 678      01010101 
 679              	.LASF28:
 680 0000 65704372 		.ascii	"epCr0\000"
 680      3000
 681              	.LASF11:
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 26


 682 0006 666C6F61 		.ascii	"float\000"
 682      7400
 683              	.LASF3:
 684 000c 73686F72 		.ascii	"short unsigned int\000"
 684      7420756E 
 684      7369676E 
 684      65642069 
 684      6E7400
 685              	.LASF36:
 686 001f 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 686      72617465 
 686      645F536F 
 686      75726365 
 686      5C50536F 
 687              	.LASF25:
 688 0044 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 688      4246535F 
 688      45505F43 
 688      544C5F42 
 688      4C4F434B 
 689              	.LASF34:
 690 0059 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 690      535F4255 
 690      535F5245 
 690      5345545F 
 690      49535200 
 691              	.LASF37:
 692 006d 5A3A5C55 		.ascii	"Z:\\Users\\iLyngklip\\Dropbox\\AAU\\4. Semester\\Di"
 692      73657273 
 692      5C694C79 
 692      6E676B6C 
 692      69705C44 
 693 009a 67697461 		.ascii	"gital-Design\\USB HID\\Stuff works.cydsn\000"
 693      6C2D4465 
 693      7369676E 
 693      5C555342 
 693      20484944 
 694              	.LASF26:
 695 00c1 6570436E 		.ascii	"epCnt0\000"
 695      743000
 696              	.LASF27:
 697 00c8 6570436E 		.ascii	"epCnt1\000"
 697      743100
 698              	.LASF19:
 699 00cf 6570546F 		.ascii	"epToggle\000"
 699      67676C65 
 699      00
 700              	.LASF1:
 701 00d8 756E7369 		.ascii	"unsigned char\000"
 701      676E6564 
 701      20636861 
 701      7200
 702              	.LASF14:
 703 00e6 72656738 		.ascii	"reg8\000"
 703      00
 704              	.LASF17:
 705 00eb 61706945 		.ascii	"apiEpState\000"
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 27


 705      70537461 
 705      746500
 706              	.LASF5:
 707 00f6 6C6F6E67 		.ascii	"long unsigned int\000"
 707      20756E73 
 707      69676E65 
 707      6420696E 
 707      7400
 708              	.LASF20:
 709 0108 61646472 		.ascii	"addr\000"
 709      00
 710              	.LASF33:
 711 010d 55534246 		.ascii	"USBFS_SOF_ISR\000"
 711      535F534F 
 711      465F4953 
 711      5200
 712              	.LASF30:
 713 011b 73696545 		.ascii	"sieEp\000"
 713      7000
 714              	.LASF38:
 715 0121 55534246 		.ascii	"USBFS_EP\000"
 715      535F4550 
 715      00
 716              	.LASF35:
 717 012a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 717      4320342E 
 717      392E3320 
 717      32303135 
 717      30333033 
 718 015d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 718      20726576 
 718      6973696F 
 718      6E203232 
 718      31323230 
 719 0190 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 719      66756E63 
 719      74696F6E 
 719      2D736563 
 719      74696F6E 
 720              	.LASF12:
 721 01b8 646F7562 		.ascii	"double\000"
 721      6C6500
 722              	.LASF29:
 723 01bf 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 723      535F7369 
 723      655F6570 
 723      5F737472 
 723      75637400 
 724              	.LASF22:
 725 01d3 62756666 		.ascii	"buffOffset\000"
 725      4F666673 
 725      657400
 726              	.LASF10:
 727 01de 75696E74 		.ascii	"uint16\000"
 727      313600
 728              	.LASF31:
 729 01e5 55534246 		.ascii	"USBFS_sie_eps_struct\000"
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 28


 729      535F7369 
 729      655F6570 
 729      735F7374 
 729      72756374 
 730              	.LASF8:
 731 01fa 756E7369 		.ascii	"unsigned int\000"
 731      676E6564 
 731      20696E74 
 731      00
 732              	.LASF7:
 733 0207 6C6F6E67 		.ascii	"long long unsigned int\000"
 733      206C6F6E 
 733      6720756E 
 733      7369676E 
 733      65642069 
 734              	.LASF18:
 735 021e 68774570 		.ascii	"hwEpState\000"
 735      53746174 
 735      6500
 736              	.LASF32:
 737 0228 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 737      535F4550 
 737      5F315F49 
 737      535200
 738              	.LASF15:
 739 0237 73697A65 		.ascii	"sizetype\000"
 739      74797065 
 739      00
 740              	.LASF16:
 741 0240 61747472 		.ascii	"attrib\000"
 741      696200
 742              	.LASF21:
 743 0247 65704D6F 		.ascii	"epMode\000"
 743      646500
 744              	.LASF6:
 745 024e 6C6F6E67 		.ascii	"long long int\000"
 745      206C6F6E 
 745      6720696E 
 745      7400
 746              	.LASF13:
 747 025c 63686172 		.ascii	"char\000"
 747      00
 748              	.LASF23:
 749 0261 62756666 		.ascii	"bufferSize\000"
 749      65725369 
 749      7A6500
 750              	.LASF2:
 751 026c 73686F72 		.ascii	"short int\000"
 751      7420696E 
 751      7400
 752              	.LASF9:
 753 0276 75696E74 		.ascii	"uint8\000"
 753      3800
 754              	.LASF24:
 755 027c 696E7465 		.ascii	"interface\000"
 755      72666163 
 755      6500
ARM GAS  C:\Users\ILYNGK~1\AppData\Local\Temp\ccIybgsh.s 			page 29


 756              	.LASF4:
 757 0286 6C6F6E67 		.ascii	"long int\000"
 757      20696E74 
 757      00
 758              	.LASF0:
 759 028f 7369676E 		.ascii	"signed char\000"
 759      65642063 
 759      68617200 
 760              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
